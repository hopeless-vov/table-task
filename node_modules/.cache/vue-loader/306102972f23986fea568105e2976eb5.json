{"remainingRequest":"/home/volodymyr.bondarenko/Desktop/office/table-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/volodymyr.bondarenko/Desktop/office/table-test/src/components/Dialog/index.vue?vue&type=style&index=0&id=6b5dcbfb&lang=scss&scoped=true&","dependencies":[{"path":"/home/volodymyr.bondarenko/Desktop/office/table-test/src/components/Dialog/index.vue","mtime":1639186916350},{"path":"/home/volodymyr.bondarenko/Desktop/office/table-test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/volodymyr.bondarenko/Desktop/office/table-test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/volodymyr.bondarenko/Desktop/office/table-test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/volodymyr.bondarenko/Desktop/office/table-test/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/volodymyr.bondarenko/Desktop/office/table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/volodymyr.bondarenko/Desktop/office/table-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnYtZGF0YS10YWJsZSB7CiAgbWF4LWhlaWdodDogMjQ0cHghaW1wb3J0YW50OwogIGhlaWdodDogMTAwJSFpbXBvcnRhbnQ7CiAgb3ZlcmZsb3cteTogc2Nyb2xsIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Dialog","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"modal\"\n    persistent\n    transition=\"dialog-bottom-transition\"\n    max-width=\"780\"\n    class=\"main-dialog\">\n    <template>\n      <v-card>\n        <v-toolbar\n          color=\"indigo lighten-1\"\n          dark>\n          Table Info\n          <v-spacer></v-spacer>\n          {{ rowName }}\n        </v-toolbar>\n        <v-card-text>\n          <v-select\n            v-model=\"version\"\n            :items=\"versions\"\n            append-outer-icon=\"mdi-form-select\"\n            menu-props=\"auto\"\n            hide-details\n            label=\"Choose Version\"\n            single-line\n            @input=\"getFiles(rowDetails, version)\"/>\n          <div\n            class=\"mt-10\">\n            <InfoTable\n              :headers=\"headers\"\n              :items=\"files\"/>\n          </div>\n        </v-card-text>\n        <v-card-actions class=\"justify-end\">\n          <v-btn\n            text\n            @click=\"closeModal\">\n            Close\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </template>\n  </v-dialog>\n</template>\n\n<script>\nimport {\n  mapMutations,\n} from 'vuex';\nimport InfoTable from '../Table';\n  export default {\n    name: 'Dialog',\n    components: {\n      InfoTable,\n    },\n    props: {\n      rowDetails: {\n        type: Object,\n        default: () => null,\n      },\n      modal: {\n        type: Boolean,\n        default: () => false,\n      },\n      versions: {\n        type: Array,\n        default: () => [],\n      },\n      latestVersion: {\n        type: String,\n        default:() => '',\n      },\n    },\n    data() {\n      return {\n        version: '',\n        headers: [\n          {\n            text: 'Package',\n            align: 'start',\n            sortable: true,\n            value: 'name',\n          },\n          {\n            text: 'Package Type',\n            value: 'type',\n            sortable: false,\n          },\n          {\n            text: 'Files Includes',\n            value: 'files',\n            sortable: false,\n          },\n          {\n            text: 'Size',\n            value: 'size',\n            sortable: false,\n          },\n          {\n            text: 'Time',\n            value: 'time',\n            sortable: false,\n          },\n        ],\n        files: [],\n      }\n    },\n    watch: {\n      modal() {\n        if (this.modal) {\n          this.version = this.latestVersion;\n          this.getFiles(this.rowDetails, this.version);\n        }\n      },\n    },\n    computed: {\n      rowName() {\n        return this.rowDetails?.name;\n      },\n    },\n    methods: {\n      ...mapMutations(['setSpinner', 'setSnackBar']),\n      async getFiles(row, version) {\n        this.setSpinner(true);\n        if (row) {\n          try {\n            const { name, type } = row;\n            const { data } = await axios.get(`https://data.jsdelivr.com/v1/package/${type}/${name}@${version}`);\n            this.files = data.files;\n          } catch (err) {\n            console.log('getFiles', err);\n          } finally {\n            this.setSpinner(false);\n          }\n        }\n      },\n      closeModal() {\n        this.files = [];\n        this.$emit('closeTableDialog');\n      },\n    },\n  }\n</script>\n<style lang=\"scss\" scoped>\n    .v-data-table {\n      max-height: 244px!important;\n      height: 100%!important;\n      overflow-y: scroll!important;\n    }\n</style>\n"]}]}